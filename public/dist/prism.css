@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap);
/* PrismJS 1.23.0
https://prismjs.com/download.html#themes=prism-okaidia&languages=markup+css+clike+javascript+abap+abnf+actionscript+ada+agda+al+antlr4+apacheconf+apex+apl+applescript+aql+arduino+arff+asciidoc+aspnet+asm6502+autohotkey+autoit+bash+basic+batch+bbcode+birb+bison+bnf+brainfuck+brightscript+bro+bsl+c+csharp+cpp+cfscript+chaiscript+cil+clojure+cmake+cobol+coffeescript+concurnas+csp+coq+crystal+css-extras+csv+cypher+d+dart+dataweave+dax+dhall+diff+django+dns-zone-file+docker+dot+ebnf+editorconfig+eiffel+ejs+elixir+elm+etlua+erb+erlang+excel-formula+fsharp+factor+false+firestore-security-rules+flow+fortran+ftl+gml+gcode+gdscript+gedcom+gherkin+git+glsl+go+graphql+groovy+haml+handlebars+haskell+haxe+hcl+hlsl+http+hpkp+hsts+ichigojam+icon+icu-message-format+idris+ignore+inform7+ini+io+j+java+javadoc+javadoclike+javastacktrace+jexl+jolie+jq+jsdoc+js-extras+json+json5+jsonp+jsstacktrace+js-templates+julia+keyman+kotlin+kumir+latex+latte+less+lilypond+liquid+lisp+livescript+llvm+log+lolcode+lua+makefile+markdown+markup-templating+matlab+mel+mizar+mongodb+monkey+moonscript+n1ql+n4js+nand2tetris-hdl+naniscript+nasm+neon+nevod+nginx+nim+nix+nsis+objectivec+ocaml+opencl+openqasm+oz+parigp+parser+pascal+pascaligo+psl+pcaxis+peoplecode+perl+php+phpdoc+php-extras+plsql+powerquery+powershell+processing+prolog+promql+properties+protobuf+pug+puppet+pure+purebasic+purescript+python+qsharp+q+qml+qore+r+racket+jsx+tsx+reason+regex+rego+renpy+rest+rip+roboconf+robotframework+ruby+rust+sas+sass+scss+scala+scheme+shell-session+smali+smalltalk+smarty+sml+solidity+solution-file+soy+sparql+splunk-spl+sqf+sql+squirrel+stan+iecst+stylus+swift+t4-templating+t4-cs+t4-vb+tap+tcl+tt2+textile+toml+turtle+twig+typescript+typoscript+unrealscript+uri+v+vala+vbnet+velocity+verilog+vhdl+vim+visual-basic+warpscript+wasm+wiki+xeora+xml-doc+xojo+xquery+yaml+yang+zig&plugins=toolbar */
/**
 * okaidia theme for JavaScript, CSS and HTML
 * Loosely based on Monokai textmate theme by http://www.monokai.nl/
 * @author ocodia
 */
body {
  font-family: "Poppins", sans-serif;
  font-size: 1rem;
}

code[class*=language-], pre[class*=language-] {
  color: #f8f8f2;
  background: none;
  text-shadow: 0 1px rgba(0, 0, 0, 0.3);
  font-family: "Segoe UI" sans-serif, "Ubuntu Mono";
  font-size: 0.8rem;
  font-weight: 600;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  hyphens: none;
}

/* Code blocks */
pre[class*=language-] {
  border-left: 7px solid darkgreen;
  border-radius: 5px;
  padding: 1em;
  margin: 0.5em 0;
  overflow-x: auto;
}

:not(pre) > code[class*=language-], pre[class*=language-] {
  background: #20201d;
}

/* Inline code */
:not(pre) > code[class*=language-] {
  padding: 0.1em;
  border-radius: 0.3em;
  white-space: normal;
}

.token.comment, .token.prolog, .token.doctype, .token.cdata {
  color: #8292a2;
}

.token.punctuation {
  color: #f8f8f2;
}

.token.namespace {
  opacity: 0.7;
}

.token.property, .token.tag, .token.constant, .token.symbol, .token.deleted {
  color: #f92672;
}

.token.boolean, .token.number {
  color: #ae81ff;
}

.token.selector, .token.attr-name, .token.string, .token.char, .token.builtin, .token.inserted {
  color: #a6e22e;
}

.token.operator, .token.entity, .token.url, .language-css .token.string, .style .token.string, .token.variable {
  color: #f8f8f2;
}

.token.atrule, .token.attr-value, .token.function, .token.class-name {
  color: #e6db74;
}

.token.keyword {
  color: #66d9ef;
}

.token.regex, .token.important {
  color: #fd971f;
}

.token.important, .token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

div.code-toolbar {
  position: relative;
}

div.code-toolbar > .toolbar {
  position: absolute;
  top: 0.3em;
  right: 0.2em;
  transition: opacity 0.3s ease-in-out;
  opacity: 0;
}

div.code-toolbar:hover > .toolbar {
  opacity: 1;
}

/* Separate line b/c rules are thrown out if selector is invalid.
   IE11 and old Edge versions don't support :focus-within. */
div.code-toolbar[focus-within] > .toolbar {
  opacity: 1;
}
div.code-toolbar:focus-within > .toolbar {
  opacity: 1;
}

div.code-toolbar > .toolbar .toolbar-item {
  display: inline-block;
}

div.code-toolbar > .toolbar a {
  cursor: pointer;
}

div.code-toolbar > .toolbar button {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  -webkit-user-select: none;
  /* for button */
  -moz-user-select: none;
  -ms-user-select: none;
}

div.code-toolbar > .toolbar a, div.code-toolbar > .toolbar button, div.code-toolbar > .toolbar span {
  color: #bbb;
  font-size: 0.8em;
  padding: 0 0.5em;
  background: #f5f2f0;
  background: rgba(224, 224, 224, 0.2);
  box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.2);
  border-radius: 0.5em;
}

div.code-toolbar > .toolbar a:hover, div.code-toolbar > .toolbar a:focus, div.code-toolbar > .toolbar button:hover, div.code-toolbar > .toolbar button:focus, div.code-toolbar > .toolbar span:hover, div.code-toolbar > .toolbar span:focus {
  color: inherit;
  text-decoration: none;
}

table, td, th, tr, tbody {
  border: 1px solid #acacac;
  border-radius: 5px;
  padding: 0.5rem;
}

span {
  border-radius: 5px;
  padding: 0 1px;
}

blockquote {
  border-left: 5px solid #c8c8c8;
  border-top-left-radius: 2px;
  border-bottom-left-radius: 2px;
  padding-left: 0.5rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnNpZGVyLWh1Yi8uL3B1YmxpYy9zdHlsZS9wcmlzbS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzgwREFBQTtBQUdBOzs7O0VBQUE7QUFPQTtFQUNFO0VBQ0E7QUFERjs7QUFJQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBR0E7QUFERjs7QUFJQTtBQUVBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQUZGOztBQUtBO0VBQ0U7QUFGRjs7QUFLQTtBQUVBO0VBQ0U7RUFDQTtFQUNBO0FBSEY7O0FBTUE7RUFDRTtBQUhGOztBQU1BO0VBQ0U7QUFIRjs7QUFNQTtFQUNFO0FBSEY7O0FBTUE7RUFDRTtBQUhGOztBQU1BO0VBQ0U7QUFIRjs7QUFNQTtFQUNFO0FBSEY7O0FBTUE7RUFDRTtBQUhGOztBQU1BO0VBQ0U7QUFIRjs7QUFNQTtFQUNFO0FBSEY7O0FBTUE7RUFDRTtBQUhGOztBQU1BO0VBQ0U7QUFIRjs7QUFNQTtFQUNFO0FBSEY7O0FBTUE7RUFDRTtBQUhGOztBQU1BO0VBQ0U7QUFIRjs7QUFNQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUFIRjs7QUFNQTtFQUNFO0FBSEY7O0FBTUE7NERBQUE7QUFHQTtFQUNFO0FBSkY7QUFHQTtFQUNFO0FBSkY7O0FBT0E7RUFDRTtBQUpGOztBQU9BO0VBQ0U7QUFKRjs7QUFPQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUFKRjs7QUFPQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FBSkY7O0FBT0E7RUFDRTtFQUNBO0FBSkY7O0FBT0E7RUFDRTtFQUNBO0VBQ0E7QUFKRjs7QUFPQTtFQUNFO0VBQ0E7QUFKRjs7QUFPQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FBSkYsQyIsImZpbGUiOiJwcmlzbS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBQcmlzbUpTIDEuMjMuMFxyXG5odHRwczovL3ByaXNtanMuY29tL2Rvd25sb2FkLmh0bWwjdGhlbWVzPXByaXNtLW9rYWlkaWEmbGFuZ3VhZ2VzPW1hcmt1cCtjc3MrY2xpa2UramF2YXNjcmlwdCthYmFwK2FibmYrYWN0aW9uc2NyaXB0K2FkYSthZ2RhK2FsK2FudGxyNCthcGFjaGVjb25mK2FwZXgrYXBsK2FwcGxlc2NyaXB0K2FxbCthcmR1aW5vK2FyZmYrYXNjaWlkb2MrYXNwbmV0K2FzbTY1MDIrYXV0b2hvdGtleSthdXRvaXQrYmFzaCtiYXNpYytiYXRjaCtiYmNvZGUrYmlyYitiaXNvbitibmYrYnJhaW5mdWNrK2JyaWdodHNjcmlwdCticm8rYnNsK2MrY3NoYXJwK2NwcCtjZnNjcmlwdCtjaGFpc2NyaXB0K2NpbCtjbG9qdXJlK2NtYWtlK2NvYm9sK2NvZmZlZXNjcmlwdCtjb25jdXJuYXMrY3NwK2NvcStjcnlzdGFsK2Nzcy1leHRyYXMrY3N2K2N5cGhlcitkK2RhcnQrZGF0YXdlYXZlK2RheCtkaGFsbCtkaWZmK2RqYW5nbytkbnMtem9uZS1maWxlK2RvY2tlcitkb3QrZWJuZitlZGl0b3Jjb25maWcrZWlmZmVsK2VqcytlbGl4aXIrZWxtK2V0bHVhK2VyYitlcmxhbmcrZXhjZWwtZm9ybXVsYStmc2hhcnArZmFjdG9yK2ZhbHNlK2ZpcmVzdG9yZS1zZWN1cml0eS1ydWxlcytmbG93K2ZvcnRyYW4rZnRsK2dtbCtnY29kZStnZHNjcmlwdCtnZWRjb20rZ2hlcmtpbitnaXQrZ2xzbCtnbytncmFwaHFsK2dyb292eStoYW1sK2hhbmRsZWJhcnMraGFza2VsbCtoYXhlK2hjbCtobHNsK2h0dHAraHBrcCtoc3RzK2ljaGlnb2phbStpY29uK2ljdS1tZXNzYWdlLWZvcm1hdCtpZHJpcytpZ25vcmUraW5mb3JtNytpbmkraW8raitqYXZhK2phdmFkb2MramF2YWRvY2xpa2UramF2YXN0YWNrdHJhY2UramV4bCtqb2xpZStqcStqc2RvYytqcy1leHRyYXMranNvbitqc29uNStqc29ucCtqc3N0YWNrdHJhY2UranMtdGVtcGxhdGVzK2p1bGlhK2tleW1hbitrb3RsaW4ra3VtaXIrbGF0ZXgrbGF0dGUrbGVzcytsaWx5cG9uZCtsaXF1aWQrbGlzcCtsaXZlc2NyaXB0K2xsdm0rbG9nK2xvbGNvZGUrbHVhK21ha2VmaWxlK21hcmtkb3duK21hcmt1cC10ZW1wbGF0aW5nK21hdGxhYittZWwrbWl6YXIrbW9uZ29kYittb25rZXkrbW9vbnNjcmlwdCtuMXFsK240anMrbmFuZDJ0ZXRyaXMtaGRsK25hbmlzY3JpcHQrbmFzbStuZW9uK25ldm9kK25naW54K25pbStuaXgrbnNpcytvYmplY3RpdmVjK29jYW1sK29wZW5jbCtvcGVucWFzbStveitwYXJpZ3ArcGFyc2VyK3Bhc2NhbCtwYXNjYWxpZ28rcHNsK3BjYXhpcytwZW9wbGVjb2RlK3BlcmwrcGhwK3BocGRvYytwaHAtZXh0cmFzK3Bsc3FsK3Bvd2VycXVlcnkrcG93ZXJzaGVsbCtwcm9jZXNzaW5nK3Byb2xvZytwcm9tcWwrcHJvcGVydGllcytwcm90b2J1ZitwdWcrcHVwcGV0K3B1cmUrcHVyZWJhc2ljK3B1cmVzY3JpcHQrcHl0aG9uK3FzaGFycCtxK3FtbCtxb3JlK3IrcmFja2V0K2pzeCt0c3grcmVhc29uK3JlZ2V4K3JlZ28rcmVucHkrcmVzdCtyaXArcm9ib2NvbmYrcm9ib3RmcmFtZXdvcmsrcnVieStydXN0K3NhcytzYXNzK3Njc3Mrc2NhbGErc2NoZW1lK3NoZWxsLXNlc3Npb24rc21hbGkrc21hbGx0YWxrK3NtYXJ0eStzbWwrc29saWRpdHkrc29sdXRpb24tZmlsZStzb3krc3BhcnFsK3NwbHVuay1zcGwrc3FmK3NxbCtzcXVpcnJlbCtzdGFuK2llY3N0K3N0eWx1cytzd2lmdCt0NC10ZW1wbGF0aW5nK3Q0LWNzK3Q0LXZiK3RhcCt0Y2wrdHQyK3RleHRpbGUrdG9tbCt0dXJ0bGUrdHdpZyt0eXBlc2NyaXB0K3R5cG9zY3JpcHQrdW5yZWFsc2NyaXB0K3VyaSt2K3ZhbGErdmJuZXQrdmVsb2NpdHkrdmVyaWxvZyt2aGRsK3ZpbSt2aXN1YWwtYmFzaWMrd2FycHNjcmlwdCt3YXNtK3dpa2kreGVvcmEreG1sLWRvYyt4b2pvK3hxdWVyeSt5YW1sK3lhbmcremlnJnBsdWdpbnM9dG9vbGJhciAqL1xyXG5cclxuLyoqXHJcbiAqIG9rYWlkaWEgdGhlbWUgZm9yIEphdmFTY3JpcHQsIENTUyBhbmQgSFRNTFxyXG4gKiBMb29zZWx5IGJhc2VkIG9uIE1vbm9rYWkgdGV4dG1hdGUgdGhlbWUgYnkgaHR0cDovL3d3dy5tb25va2FpLm5sL1xyXG4gKiBAYXV0aG9yIG9jb2RpYVxyXG4gKi9cclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9UG9wcGluczp3Z2h0QDEwMDsyMDA7MzAwOzQwMDs1MDA7NjAwOzcwMDs4MDA7OTAwJmRpc3BsYXk9c3dhcCcpO1xyXG5cclxuYm9keSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiUG9wcGluc1wiLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxufVxyXG5cclxuY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0sIHByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0ge1xyXG4gIGNvbG9yOiAjZjhmOGYyO1xyXG4gIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICBmb250LWZhbWlseTogXCJTZWdvZSBVSVwiIHNhbnMtc2VyaWYsICdVYnVudHUgTW9ubyc7XHJcbiAgZm9udC1zaXplOiAwLjhyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIHdoaXRlLXNwYWNlOiBwcmU7XHJcbiAgd29yZC1zcGFjaW5nOiBub3JtYWw7XHJcbiAgd29yZC1icmVhazogbm9ybWFsO1xyXG4gIHdvcmQtd3JhcDogbm9ybWFsO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgLW1vei10YWItc2l6ZTogNDtcclxuICAtby10YWItc2l6ZTogNDtcclxuICB0YWItc2l6ZTogNDtcclxuICAtd2Via2l0LWh5cGhlbnM6IG5vbmU7XHJcbiAgLW1vei1oeXBoZW5zOiBub25lO1xyXG4gIC1tcy1oeXBoZW5zOiBub25lO1xyXG4gIGh5cGhlbnM6IG5vbmU7XHJcbn1cclxuXHJcbi8qIENvZGUgYmxvY2tzICovXHJcblxyXG5wcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIHtcclxuICBib3JkZXItbGVmdDogN3B4IHNvbGlkIHJnYigwLCAxMDAsIDApO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBwYWRkaW5nOiAxZW07XHJcbiAgbWFyZ2luOiAuNWVtIDA7XHJcbiAgb3ZlcmZsb3cteDogYXV0bztcclxufVxyXG5cclxuOm5vdChwcmUpPmNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdLCBwcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIHtcclxuICBiYWNrZ3JvdW5kOiAjMjAyMDFkO1xyXG59XHJcblxyXG4vKiBJbmxpbmUgY29kZSAqL1xyXG5cclxuOm5vdChwcmUpPmNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIHtcclxuICBwYWRkaW5nOiAuMWVtO1xyXG4gIGJvcmRlci1yYWRpdXM6IC4zZW07XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxufVxyXG5cclxuLnRva2VuLmNvbW1lbnQsIC50b2tlbi5wcm9sb2csIC50b2tlbi5kb2N0eXBlLCAudG9rZW4uY2RhdGEge1xyXG4gIGNvbG9yOiAjODI5MmEyO1xyXG59XHJcblxyXG4udG9rZW4ucHVuY3R1YXRpb24ge1xyXG4gIGNvbG9yOiAjZjhmOGYyO1xyXG59XHJcblxyXG4udG9rZW4ubmFtZXNwYWNlIHtcclxuICBvcGFjaXR5OiAuNztcclxufVxyXG5cclxuLnRva2VuLnByb3BlcnR5LCAudG9rZW4udGFnLCAudG9rZW4uY29uc3RhbnQsIC50b2tlbi5zeW1ib2wsIC50b2tlbi5kZWxldGVkIHtcclxuICBjb2xvcjogI2Y5MjY3MjtcclxufVxyXG5cclxuLnRva2VuLmJvb2xlYW4sIC50b2tlbi5udW1iZXIge1xyXG4gIGNvbG9yOiAjYWU4MWZmO1xyXG59XHJcblxyXG4udG9rZW4uc2VsZWN0b3IsIC50b2tlbi5hdHRyLW5hbWUsIC50b2tlbi5zdHJpbmcsIC50b2tlbi5jaGFyLCAudG9rZW4uYnVpbHRpbiwgLnRva2VuLmluc2VydGVkIHtcclxuICBjb2xvcjogI2E2ZTIyZTtcclxufVxyXG5cclxuLnRva2VuLm9wZXJhdG9yLCAudG9rZW4uZW50aXR5LCAudG9rZW4udXJsLCAubGFuZ3VhZ2UtY3NzIC50b2tlbi5zdHJpbmcsIC5zdHlsZSAudG9rZW4uc3RyaW5nLCAudG9rZW4udmFyaWFibGUge1xyXG4gIGNvbG9yOiAjZjhmOGYyO1xyXG59XHJcblxyXG4udG9rZW4uYXRydWxlLCAudG9rZW4uYXR0ci12YWx1ZSwgLnRva2VuLmZ1bmN0aW9uLCAudG9rZW4uY2xhc3MtbmFtZSB7XHJcbiAgY29sb3I6ICNlNmRiNzQ7XHJcbn1cclxuXHJcbi50b2tlbi5rZXl3b3JkIHtcclxuICBjb2xvcjogIzY2ZDllZjtcclxufVxyXG5cclxuLnRva2VuLnJlZ2V4LCAudG9rZW4uaW1wb3J0YW50IHtcclxuICBjb2xvcjogI2ZkOTcxZjtcclxufVxyXG5cclxuLnRva2VuLmltcG9ydGFudCwgLnRva2VuLmJvbGQge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4udG9rZW4uaXRhbGljIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbi50b2tlbi5lbnRpdHkge1xyXG4gIGN1cnNvcjogaGVscDtcclxufVxyXG5cclxuZGl2LmNvZGUtdG9vbGJhciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG5kaXYuY29kZS10b29sYmFyPi50b29sYmFyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAuM2VtO1xyXG4gIHJpZ2h0OiAuMmVtO1xyXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlLWluLW91dDtcclxuICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG5kaXYuY29kZS10b29sYmFyOmhvdmVyPi50b29sYmFyIHtcclxuICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG4vKiBTZXBhcmF0ZSBsaW5lIGIvYyBydWxlcyBhcmUgdGhyb3duIG91dCBpZiBzZWxlY3RvciBpcyBpbnZhbGlkLlxyXG4gICBJRTExIGFuZCBvbGQgRWRnZSB2ZXJzaW9ucyBkb24ndCBzdXBwb3J0IDpmb2N1cy13aXRoaW4uICovXHJcblxyXG5kaXYuY29kZS10b29sYmFyOmZvY3VzLXdpdGhpbj4udG9vbGJhciB7XHJcbiAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuZGl2LmNvZGUtdG9vbGJhcj4udG9vbGJhciAudG9vbGJhci1pdGVtIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbmRpdi5jb2RlLXRvb2xiYXI+LnRvb2xiYXIgYSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5kaXYuY29kZS10b29sYmFyPi50b29sYmFyIGJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZDogbm9uZTtcclxuICBib3JkZXI6IDA7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcbiAgZm9udDogaW5oZXJpdDtcclxuICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcclxuICAvKiBmb3IgYnV0dG9uICovXHJcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcclxuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbn1cclxuXHJcbmRpdi5jb2RlLXRvb2xiYXI+LnRvb2xiYXIgYSwgZGl2LmNvZGUtdG9vbGJhcj4udG9vbGJhciBidXR0b24sIGRpdi5jb2RlLXRvb2xiYXI+LnRvb2xiYXIgc3BhbiB7XHJcbiAgY29sb3I6ICNiYmI7XHJcbiAgZm9udC1zaXplOiAuOGVtO1xyXG4gIHBhZGRpbmc6IDAgLjVlbTtcclxuICBiYWNrZ3JvdW5kOiAjZjVmMmYwO1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMjI0LCAyMjQsIDIyNCwgMC4yKTtcclxuICBib3gtc2hhZG93OiAwIDJweCAwIDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIGJvcmRlci1yYWRpdXM6IC41ZW07XHJcbn1cclxuXHJcbmRpdi5jb2RlLXRvb2xiYXI+LnRvb2xiYXIgYTpob3ZlciwgZGl2LmNvZGUtdG9vbGJhcj4udG9vbGJhciBhOmZvY3VzLCBkaXYuY29kZS10b29sYmFyPi50b29sYmFyIGJ1dHRvbjpob3ZlciwgZGl2LmNvZGUtdG9vbGJhcj4udG9vbGJhciBidXR0b246Zm9jdXMsIGRpdi5jb2RlLXRvb2xiYXI+LnRvb2xiYXIgc3Bhbjpob3ZlciwgZGl2LmNvZGUtdG9vbGJhcj4udG9vbGJhciBzcGFuOmZvY3VzIHtcclxuICBjb2xvcjogaW5oZXJpdDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbnRhYmxlLCB0ZCwgdGgsIHRyLCB0Ym9keSB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDE3MiwgMTcyLCAxNzIpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBwYWRkaW5nOiAuNXJlbTtcclxufVxyXG5cclxuc3BhbiB7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHBhZGRpbmc6IDAgMXB4O1xyXG59XHJcblxyXG5ibG9ja3F1b3RlIHtcclxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkIHJnYigyMDAsIDIwMCwgMjAwKTtcclxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAycHg7XHJcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMnB4O1xyXG4gIHBhZGRpbmctbGVmdDogLjVyZW07XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9*/